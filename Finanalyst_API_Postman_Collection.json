{
  "info": {
    "name": "Finanalyst API Collection",
    "description": "Complete API collection for the Financial Analytics Dashboard application. This collection includes all endpoints for authentication, transaction management, and data analysis.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"demo@finanalyst.com\",\n  \"password\": \"demo123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Authenticate user and receive JWT token. Use the returned token in the 'authToken' variable for subsequent requests."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"demo@finanalyst.com\",\n  \"password\": \"demo123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Login successful\",\n  \"data\": {\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"user\": {\n      \"id\": \"1\",\n      \"name\": \"Pranav Palekar\",\n      \"email\": \"demo@finanalyst.com\"\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "User Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New User\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user account. Password must be at least 6 characters long."
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get current user profile information. Requires authentication."
          }
        }
      ]
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Get All Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"]
            },
            "description": "Retrieve all transactions with optional pagination and filtering."
          }
        },
        {
          "name": "Get Transactions with Filters",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/transactions?page=1&limit=10&category=Revenue&startDate=2024-01-01&endDate=2024-12-31&search=payment",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "category",
                  "value": "Revenue"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "search",
                  "value": "payment"
                }
              ]
            },
            "description": "Get transactions with various filters: pagination, category, date range, and search term."
          }
        },
        {
          "name": "Get Transaction by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/transactions/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "1"]
            },
            "description": "Retrieve a specific transaction by its ID."
          }
        },
        {
          "name": "Create New Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 1500.00,\n  \"category\": \"Revenue\",\n  \"date\": \"2024-06-15\",\n  \"status\": \"Paid\",\n  \"user_id\": \"user123\",\n  \"user_profile\": \"https://example.com/profile.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions"]
            },
            "description": "Create a new transaction. All fields are required except user_profile."
          }
        },
        {
          "name": "Update Transaction",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 1600.00,\n  \"category\": \"Revenue\",\n  \"date\": \"2024-06-15\",\n  \"status\": \"Paid\",\n  \"user_id\": \"user123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/transactions/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "1"]
            },
            "description": "Update an existing transaction by ID."
          }
        },
        {
          "name": "Delete Transaction",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/transactions/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "1"]
            },
            "description": "Delete a transaction by ID."
          }
        },
        {
          "name": "Export Transactions to CSV",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/transactions/export?category=Revenue&startDate=2024-01-01&endDate=2024-12-31&search=payment",
              "host": ["{{baseUrl}}"],
              "path": ["api", "transactions", "export"],
              "query": [
                {
                  "key": "category",
                  "value": "Revenue"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "search",
                  "value": "payment"
                }
              ]
            },
            "description": "Export filtered transactions to CSV format. Supports all the same filters as the GET endpoint."
          }
        }
      ]
    },
    {
      "name": "Analytics & Dashboard",
      "item": [
        {
          "name": "Get Financial Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/summary",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "summary"]
            },
            "description": "Get financial summary including total revenue, expenses, balance, and profit margin."
          }
        },
        {
          "name": "Get Monthly Trends",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/trends?year=2024",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "trends"],
              "query": [
                {
                  "key": "year",
                  "value": "2024"
                }
              ]
            },
            "description": "Get monthly revenue vs expenses trend data for dashboard charts."
          }
        },
        {
          "name": "Get Category Breakdown",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "categories"]
            },
            "description": "Get revenue and expense breakdown by user/category for pie charts."
          }
        },
        {
          "name": "Get Growth Rates",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/growth?year=2024",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "growth"],
              "query": [
                {
                  "key": "year",
                  "value": "2024"
                }
              ]
            },
            "description": "Get month-over-month growth rates for revenue, expenses, and profit."
          }
        }
      ]
    },
    {
      "name": "Health & Status",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check if the API server is running and healthy."
          }
        },
        {
          "name": "API Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "status"]
            },
            "description": "Get API status and version information."
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set auth token from login response",
          "if (pm.response && pm.response.code === 200) {",
          "    const response = pm.response.json();",
          "    if (response.success && response.data && response.data.token) {",
          "        pm.collectionVariables.set('authToken', response.data.token);",
          "    }",
          "}",
          "",
          "// Set base URL if not already set",
          "if (!pm.collectionVariables.get('baseUrl')) {",
          "    pm.collectionVariables.set('baseUrl', 'http://localhost:5000');",
          "}"
        ]
      }
    }
  ]
} 